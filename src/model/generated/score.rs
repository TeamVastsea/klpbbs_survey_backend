//! `SeaORM` Entity. Generated by sea-orm-codegen 0.12.15

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "score")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i32,
    pub user: i64,
    pub judge: i64,
    pub judge_time: DateTime,
    pub scores: Json,
    pub user_score: i32,
    pub full_score: i32,
    pub completed: bool,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::answer::Entity",
        from = "Column::Id",
        to = "super::answer::Column::Id"
    )]
    Answer,
}

impl Related<super::answer::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Answer.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
