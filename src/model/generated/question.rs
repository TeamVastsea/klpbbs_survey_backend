//! `SeaORM` Entity. Generated by sea-orm-codegen 0.12.15

use sea_orm::entity::prelude::*;
use serde::Serialize;

#[derive(Serialize, Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "question")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    pub id: String,
    pub content: Json,
    pub r#type: i32,
    pub values: Option<Vec<Json>>,
    #[sea_orm(column_type = "Text", nullable)]
    pub condition: Option<String>,
    pub required: bool,
    #[serde(skip_serializing)]
    pub answer: Option<String>,
    #[serde(skip_serializing)]
    pub all_points: Option<i32>,
    #[serde(skip_serializing)]
    pub sub_points: Option<i32>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {}

impl ActiveModelBehavior for ActiveModel {}
